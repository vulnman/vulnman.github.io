[{"body":"Vulnman consists of several components. These are presented in this section.\nThe Vulnman Server is the core component. This provides a REST API and a web interface for easy management of pentest assets during a penetration test.\nCore Vulnman introduces different components that you will see in the web interface or external tools. The components are explained below.\n  Client: Clients are the customers of your projects. Client contact information provided can be added to the pentest report.\n  Project: A project is the container of your assessment. It contains all tested assets, findings and reports.\n  Assets: Vulnman supports multiple assets that can be created through the REST-API or through the web interface. The following assets are supported:\n Service Host Web Application Web Request    Vulnerability Templates: Vulnerability templates are managed using a separate repository. This allows other external tools to introduce these templates too. These templates are used to derive basic information for your found vulnerabilities.\n  Vulnerability: A vulnerability is a security flaw that you found during the project. Vulnerabilities have a template. The default severity is inherited from the template but can be overwritten for each vulnerability.\n  ","categories":"","description":"","excerpt":"Vulnman consists of several components. These are presented in this …","ref":"/docs/glossary/","tags":"","title":"Glossary"},{"body":" Vulnman is in a really early stage of development. Feel free to use, test it and please report bugs and other ideas. You should not use it in production, because there may be breaking changes in the database schema.  What is Vulnman?   Vulnman is a free and open-source pentest management and collaboration software. Manage your pentest projects and their related assets using the Vulnman web interface. Vulnman comes with a simple to use report generator. This allows the pentesters to focus on finding vulnerabilities.  It is built using the powerful Django Framework.   Features Unlimited Users and Projects  Despite other solutions, vulnman does not limit the amount of users or projects.  Report Generator  Vulnman contains a simple to use pentest report generator. Never waste your time struggling with Word documents.  Customizable  Vulnman can be customized at multiple places. Some of them are: Report Template, Vulnerability Templates, Checklists    Markdown Syntax  Vulnman allows you to write your texts in markdown (mostly).  Vulnerability Management  Vulnman includes simple features to manage vulnerabilities of your projects. This includes Vulnerability Templates and CVSS scoring.  Checklists and To Dos  Track your tasks during the pentest. Did you already check for SQL-Injection? Never miss a check anymore!   More information  This page is just a brief introduction to what Vulnman is all about, and many technical details have been omitted here for the sake of presentation.   If you're a current or potential Vulnman user, you may want to check out the documentation.   If you're a developer, there's dedicated developer documentation.   Need help, or just want to join the conversation? Learn more about help, support, and the community.   ","categories":"","description":"","excerpt":" Vulnman is in a really early stage of development. Feel free to use, …","ref":"/docs/getting-started/intro/","tags":["docs"],"title":"Introduction"},{"body":"After downloading and install Vulnman, it’s time to dive in and get to work!\nThe Basics Vulnman consists of 2 components, the vulnman-server and vulnman-scanner. You can use the vulnman-server without the scanner component.\nFurther components and wordings are described in the glossary.\nDocumentation The documentation mainly focuses on the following sections:\n Setup and maintain a vulnman server Learn how to use vulnman Contribute to vulnman  If you want to improve the documentation, have a look at the Improve Documentation page.\n","categories":"","description":"","excerpt":"After downloading and install Vulnman, it’s time to dive in and get to …","ref":"/docs/getting-started/","tags":["docs"],"title":"Getting Started"},{"body":"The web interface allows you to manage your pentest and its assets using a user interface.\nYou can visit the vulnman server by opening your instance from within your browser. The application needs you to be logged in.\nAfter you logged in, you will be redirected to the list of your current (non archived) projects. By clicking on one of the projects, you are able to activate the project and see its details and do your work.\nProject Dashboard The project dashboard is the home of your project. It gives you a short overview about the state of your project.\nIt contains the remaining time for the project, different counts like how many vulnerabilities were found and open to dos are left.\nYou can close the project through the X button. Closing a project makes it read-only.\nIf for some reasons you forgot your role in the project, you can found it here - in the top left of the dashboard.\nA sidebar will be available with project related actions.\nThe Sidebar The sidebar only contains project related links, while the top bar include global links. The sidebar is devided into different categories.\nPentest:\nThe pentest group contains links to your project’s dashboard, vulnerabilities, tasks, user accounts and project tokens.\nAssets:\nIn this group you can create and manage your assets.\nManagement:\nThis group handels links to manage the project. Currently there is just one item in here, which allows you to add or remove contributors. It is important to know, that you need permissions to do so. By default, the project creator user will be able to remove or add contributors.\nReporting:\nHere you can create new reports or download existing one. You can write the management summary here.\n","categories":"","description":"","excerpt":"The web interface allows you to manage your pentest and its assets …","ref":"/docs/user-guide/introducing-webui/","tags":["docs"],"title":"Introducing the Web Interface"},{"body":"To Be Done\n","categories":"","description":"Examples and Tutorials of how you can use vulnman\n","excerpt":"Examples and Tutorials of how you can use vulnman\n","ref":"/docs/user-guide/","tags":["docs"],"title":"User Guide"},{"body":" Vulnman is in a really early stage of development. Feel free to use, test it and please report bugs and other ideas. You should not use it in production, because there may be breaking changes in the database schema.  Welcome to the vulnman installation guide! This guide will walk you through the process of installing vulnman.\nWithout Docker Requirements Fedora sudo dnf install python3 nginx git sudo pip install -r requirements.txt Arch-Linux sudo pacman -Sy python nginx git sudo pip install -r requirements.txt Prepare First we fetch the source code.\nmkdir /opt/vulnman-server git clone https://github.com/vulnman/vulnman.git cd /opt/vulnman-server/vulnman cp local_settings.template.py local_settings.py Configure Database The default settings will use a sqlite database. If you are fine with this you can continue with this tutorial. Otherwise, you may want to read how to configure your installation.\nInitializing Vulnman In the next step, we need to initialize vulnman.\npython manage.py migrate python manage.py collectstatic python manage.py createupseruser Systemd Service If you want to run the vulnman-server using systemd, you can paste the following content into the /etc/systemd/system/vulnman-server.service file.\n[Unit] Description=vulnman server After=network.target [Service] User=user Group=user WorkingDirectory=/opt/vulnman-server ExecStart=gunicorn --bind 127.0.0.1:8000 vulnman.wsgi [Install] WantedBy=multi-user.target To enable the service on boot and start the vulnman service, you can use the following commands:\nsudo systemctl start vulnman-server sudo systemctl enable vulnman-server Setup Nginx Paste the following content into the /etc/nginx/sites-enabled/vulnman.conf file\nserver { listen 80; return https://$host$request_uri; } server { listen 443 ssl; ssl_certificate_key /etc/ssl/your_cert.key; ssl_certificate /etc/ssl/your_cert.crt; ssl_protocols TLSv1.3; location / { proxy_pass http://127.0.0.1:8000; } } Checklists and Vulnerability Templates After you have installed vulnman you may want to import the default vulnerability templates and checklist.\nImport Vulnerability Templates python manage.py update_vulnerability_templates Note: If you want to get automatic updates for vulnerability templates. You may want to create a cronjob for the command above.\nImport Checklists python manage.py update_checklists Note: If you want to get automatic updates for the checklists. You may want to create a cronjob for the command above.\nWith Docker Adjust the credentials and paths in the docker-compose.yml file.\nFor the docker image to work, you need to set up vulnman to use a postgres database.\nTo make the report generation work, add the following line to your local_settings.py file:\nCELERY_BROKER_URL = \"redis://redis:6379\" A basic settings example for the docker setup is shown below:\nCELERY_BROKER_URL = \"redis://redis:6379\" DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'HOST': 'db', 'NAME': 'vulnman', 'USER': 'vulnman_db_user', 'PASSWORD': 'dontusethispassword', } } ALLOWED_HOSTS = [\"vulnman-web\"] # Add your host and schema here: [\"https://mydomain.com\", \"http://mydomain.com\"] CSRF_TRUSTED_ORIGINS = [\"http://localhost\", \"https://localhost\"] An example nginx config file can be found here.\nYou can start all containers with the following command:\nsudo docker-compose up ","categories":"","description":"","excerpt":" Vulnman is in a really early stage of development. Feel free to use, …","ref":"/docs/getting-started/install-vulnman-server/","tags":["docs"],"title":"Install Vulnman Server"},{"body":"The reports in vulnman are generated from templates.\nA simple default template is included, but you may want to customize it to make it yours.\nReport List You can have multiple reports for your projects, in case your customer wants to have for example an english, and a german report.\nNew Reports To create a new report, you need to give vulnman some information about the report.\nThe name is just for internal purposes and is displayed in the report list. The author of the report is displayed in the report. The title field is optional and can be used to overwrite the default report title. You can also choose a report template and language.\nThe Report The report requires you to write a management summary using the Evaluation and Recommendation fields. Both fields will send a request to the API once you remove the focus of the fields and the content will be stored in the database.\nReport Releases A report release is a fixed state of the report. Once you create a report release the report generator will use the most current information and generates the report. If you add new vulnerabilities or edit the management summary, you need to create a new report release.\nNote: There is currently no status indicator of the build process. Depending on the project size, the generation may need some time.\nAfter the report is created, you can click the download button to receive the generated PDF report.\nReport releases can have different types. The draft contains a watermark which indicates, that this report is actually a draft report. The release does not have a watermark.\n","categories":"","description":"","excerpt":"The reports in vulnman are generated from templates.\nA simple default …","ref":"/docs/user-guide/report-generation/","tags":["docs"],"title":"Generate Reports"},{"body":"In the first step, you need to install django-auth-ldap. This can be done with pip.\npip install django-auth-ldap Settings Add the following lines to your local_settings.py file.\n############## # LDAP # You need to install `django-auth-ldap` to use LDAP authentication # See https://django-auth-ldap.readthedocs.io/en/latest/install.html for library usage ############## import ldap from django_auth_ldap.config import LDAPSearch, PosixGroupType AUTH_LDAP_BIND_DN = \"cn=admin,dc=example,dc=org\" AUTH_LDAP_BIND_PASSWORD = \"admin\" AUTH_LDAP_USER_SEARCH = LDAPSearch( \"ou=Users,dc=example,dc=org\", ldap.SCOPE_SUBTREE, \"(uid=%(user)s)\" ) AUTH_LDAP_FIND_GROUP_PERMS = True AUTH_LDAP_CACHE_TIMEOUT = 3600 AUTH_LDAP_SERVER_URI = \"ldap://172.17.0.2\" AUTH_LDAP_GROUP_TYPE = PosixGroupType(name_attr='cn') AUTH_LDAP_GROUP_SEARCH = LDAPSearch( 'ou=Groups,dc=example,dc=org', ldap.SCOPE_SUBTREE, '(objectClass=posixGroup)', ) AUTH_LDAP_USER_ATTR_MAP = { \"first_name\": \"givenName\", \"last_name\": \"sn\", \"email\": \"mail\" } ","categories":"","description":"","excerpt":"In the first step, you need to install django-auth-ldap. This can be …","ref":"/docs/advanced-topics/ldap-authentication/","tags":["docs"],"title":"LDAP Authentication"},{"body":"To Be Done\n","categories":"","description":"","excerpt":"To Be Done\n","ref":"/docs/glossary/responsible-disclosure-app/","tags":"","title":"Responsible Disclosure Application"},{"body":"Your instance must have the responsible disclosure application feature enabled, otherwise it will not be accessible for you.  Vulnerability Listing Visiting the Responsible Disclosure Application opens up your list of vulnerabilities.\nThis list contains all vulnerabilities that you have created or that have been shared with you.\nThe default view is to show only open findings, while you can easily view closed ones by clicking the corresponding button.\nVulnerability Details If you click on one of the vulnerabilities in your list, you will see a screen similiar to the one below.\nA second navigatation bar appears which contains pages related to the vulnerability including a disclosure timeline, comments and access management.\nIf you have permissions to change the vulnerability you will find some buttons on the right to manage the vulnerability.\nThe buttons have the following functionality (from left to right):\n Download the vulnerability details as a PDF report Export the vulnerability details as a Markdown advisory Notify vendor by mail, with PDF report attached (Warning: The mail will be send unencrypted. PGP or other encryption is not yet supported!) Edit the vulnerability details Delete the vulnerability  In the bottom half of the page, you see two more buttons for adding new proofs to the vulnerability.\nProofs To create a new proof, just click on one of the buttons.\nAs you can see in the screenshot, you can use markdown. You can highlight specific parts of a codeblock with §§highlighted$$.\nIf you have created the proof, the proof will appear on the vulnerability details page as shown below.\nTimeline The timeline allows you and the vendor to track the process of the disclosure process.\nYou can create new events using the button on the right corner.\nComments If you shared the vulnerability with a user, you can use the comment feature to discuss further things about the disclosure process.\nYou can use markdown in the comments too.\nManage Access To share the vulnerability with the vendor or other contributors you need the Manage Access page.\nThe pages shows who has access to the vulnerability details.\nYou can share the vulnerability by providing an email address. If this address already belongs to a vulnman user, he will be granted the corresponding permissions. Otherwise, an inactive user account will be created for the user with a random username. An invitation email will be sent to the email address to activate the account and set a password.\n","categories":"","description":"","excerpt":"Your instance must have the responsible disclosure application feature …","ref":"/docs/user-guide/responsible-disclosure-application-usage/","tags":"","title":"Using The Responsible Disclosure Application"},{"body":"Database PostgreSQL DATABASES = { 'default': { 'ENGINE': 'django.db.backends.postgresql', 'HOST': 'db', 'NAME': 'vulnman', 'USER': 'vulnman_db_user', 'PASSWORD': 'dontusethispassword', } } ","categories":"","description":"","excerpt":"Database PostgreSQL DATABASES = { 'default': { 'ENGINE': …","ref":"/docs/getting-started/configuration/","tags":["docs"],"title":"Configuration"},{"body":"This page provides a central hub for topics pertaining to the security of the vulnman project.\nReporting security issues in Vulnman If you have discovered a security issue affecting vulnman, then we would be more than happy to hear from you!\nIf our investigation confirms that an issue affects vulnman, we will patch it within a reasonable time and release a public post that describes the issue, discusses the potential impact of the vulnerability, references applicable patches or workarounds, and credits the discoverer. Please use this address:\nvulnman-project+security at riseup dot net ","categories":"","description":"Information about the project security","excerpt":"Information about the project security","ref":"/docs/contribution-guidelines/security/","tags":["docs"],"title":"Project Security"},{"body":"","categories":"","description":"This section contains topics for advanced users\n","excerpt":"This section contains topics for advanced users\n","ref":"/docs/advanced-topics/","tags":"","title":"Advanced Topics"},{"body":"Note: This is work in progress For example, the \"Management\" group does not yet have a independed UI. Permissions may not be enforced everywhere at the moment!  Vulnman comes with the following default groups and permission levels:\nGroups  Management The management group members are allowed to list projects and clients. The management is allowed to create and update projects. Pentesters The members of the pentester group can be added to different projects. This will add permissions to the user to change, delete and view the project and its assets. Pentesters do not have permissions to add contributors to projects (except of the project creator). Editing clients is forbidden too. Vendors A vendor is allowed to use the Responsible Disclosure application. The vendor is allowed to comment on shared vulnerabilities.  Project Contributor Roles If a new contributor is added to a project the following roles are available.\n Read Only Contributors of this role are not allowed to change assets or other stuff belonging to the project. Pentester Pentesters are allowed to edit project related objects.  ","categories":"","description":"Explain different permissions and roles in vulnman\n","excerpt":"Explain different permissions and roles in vulnman\n","ref":"/docs/advanced-topics/permissions/","tags":"","title":"Permissions in Vulnman"},{"body":"Testing new vulnman releases and updates is one of the most helpful ways in which you can contribute to the vulnman project.\nWarning: Software testing is intended for advanced users and developers. You should only attempt to do this if you know what you’re doing. Never rely on code that is in testing for critical work!\nThe Main Branch The main branch is used for development purposes and should not be used for critical work. If you want to test upcoming releases, download the code from the main branch.\nIf you are using docker, use the main tag, which is build on every commit in the main branch.\nProviding feedback Since the whole point of testing software is to discover and fix bugs, your feedback is an essential part of this process.\n","categories":"","description":"How to test upcoming releases\n","excerpt":"How to test upcoming releases\n","ref":"/docs/contribution-guidelines/testing-releases/","tags":"","title":"Testing Releases"},{"body":"Welcome to the vulnman documentation.\n Vulnman is in a really early stage of development. Feel free to use, test it and please report bugs and other ideas. You should not use it in production, because there may be breaking changes in the database schema. ","categories":"","description":"","excerpt":"Welcome to the vulnman documentation.\n Vulnman is in a really early …","ref":"/docs/","tags":"","title":"Documentation"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/news/","tags":"","title":"News About Docsy"},{"body":"","categories":"","description":"","excerpt":"","ref":"/blog/releases/","tags":"","title":"New Releases"},{"body":"To Be Done\n","categories":"","description":"","excerpt":"To Be Done\n","ref":"/docs/contribution-guidelines/how-to-edit-the-documentation/","tags":"","title":"How To Edit The Documentation"},{"body":"To Be Done\n","categories":"","description":"","excerpt":"To Be Done\n","ref":"/docs/getting-started/issue-tracking/","tags":["docs"],"title":"Issue Tracking"},{"body":"Vulnman provides a simple task management application. The tasks can be imported from files and are created depending on which assets you test.\nSince my current focus is on the core modules, the current checklists are minimalistic and really incomplete.\nFeel free to contribute new checklists or improve existing ones.\nCurrently there is little to consider and the creation is very simple.\nStructure of Checklists First of all, the default community checklists repository is located here.\nThere are 2 required files for a checklist:\n info.yaml: Contains meta data information of the checklist ReadMe.md: A description of the test that should be performed. You may want to provide background information.  info.yaml template id:sql-injectionname:SQL-Injectionconditions:- service.name:http- service.name:https- service.port:80- service.port:443- webapplication.always:trueThe id key needs to be unique, while the name is just used for display purposes. The conditions are used to create the task based on different asset attributes.\nIn the example above, the sql-injection task is created, if a service with a name of “http” or “https”. Also if the service port is either 80 or 443. You can use the keyword always to create the task independently of the asset attribute.\n","categories":"","description":"","excerpt":"Vulnman provides a simple task management application. The tasks can …","ref":"/docs/advanced-topics/checklists/","tags":"","title":"Checklists"},{"body":"Thank you for your interest in contributing to vulnman! Here are some of the many ways in which you can help:\n Send patches to fix bugs or implement features Report bugs Test new releases and updates Write and edit the documentation Write and improve Checklists Write and improve vulnerability templates  ","categories":"","description":"How to contribute to the docs\n","excerpt":"How to contribute to the docs\n","ref":"/docs/contribution-guidelines/","tags":"","title":"Contribution Guidelines"},{"body":"The Vulnman server relies on the existing vulnerability templates.\nSince my current focus is on the core modules, the current templates are minimalistic and rather unsuitable for meaningful reports.\nFeel free to contribute new vulnerability templates or improve existing ones.\nCurrently there is little to consider, and the creation is very simple.\nStructure of Vulnerability Templates First of all, the default community vulnerability templates repository is located here.\nThere are 3 required files for a vulnerability template:\n info.yaml: Contains meta data information of the template description.md: A description of the vulnerability written in markdown syntax resolution.md: A recommendation of how the vulnerability can be fixed. Also supports markdown syntax.  Vulnman supports multiple languages for report creation. This requires to have vulnerability templates in these languages.\nThe directory structure of a vulnerability template looks similar to the one below:\n| - my_vulnerability | - info.yaml | - locale | - en | - description.md | - recommendation.md | - de | - description.md | - recommendation.md info.yaml template - id:cross-site-scriptingname:Cross-Site Scriptingseverity:criticalreferences:- \"https://owasp.org/www-community/attacks/xss/\"cwe:- CWE-79categories:- input-validationlocale:en:name:Cross-Site Scriptingde:name:Cross-Site ScriptingAvailable categories can be found in the categories.yaml file  ","categories":"","description":"","excerpt":"The Vulnman server relies on the existing vulnerability templates. …","ref":"/docs/advanced-topics/vulnerability-templates/","tags":"","title":"Vulnerability Templates"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/docs/","tags":"","title":"docs"},{"body":"","categories":"","description":"","excerpt":"","ref":"/tags/","tags":"","title":"Tags"},{"body":"This post is intended to give a brief summary of the current development processes and ideas in vulnman.\nCurrently the focus is on implementing and improving the “Responsible Disclosure” application. There have been some bug fixes and UI improvements here.\nIn addition, preparations are underway for new user roles that will be able to log in and use vulnman in the future. Using the “Responsible Disclosure” application as an example, we are thinking of developers of the software in question. These should be able to be invited in the future and thus receive a release for the corresponding vulnerabilities.\nA few other quick updates:\nWe have already implemented our own user model. This is a breaking change to version 0.3.0. Data from version 0.3.0 will probably not be migratable. However, this change will allow us more flexibility in the future.\nUser profiles already exist. These are currently still minimalistic, but the base is already done. Pentester profiles are public and should be able to be changed to private in the future.\nSoon there will be a first implementation of a comment function under vulnerabilities in the RD.\nThe page a user sees after login will differ per user role.\nThese will be by and large the changes in the next release.\nSee you soon.\n","categories":"","description":"","excerpt":"This post is intended to give a brief summary of the current …","ref":"/blog/2022/05/26/current-development-status/","tags":"","title":"Current Development Status"},{"body":"The vulnman documentation got a new home.\n","categories":"","description":"","excerpt":"The vulnman documentation got a new home.\n","ref":"/blog/2022/05/26/new-documentation/","tags":"","title":"New Documentation"},{"body":"  #td-cover-block-0 { background-image: url(/about/featured-background_hu27771fe1cc206f06193f81fdee596912_385721_960x540_fill_q75_catmullrom_bottom.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/about/featured-background_hu27771fe1cc206f06193f81fdee596912_385721_1920x1080_fill_q75_catmullrom_bottom.jpg); } }  About the Vulnman Project A Pentest and Vulnerability Management Application\n       Vulnman is currently a one man show and developed by blockomat2100. The goal is to have a full open source pentest management application and it is free.\n    Vulnman exists to make a pentesters life easier by simplifing the report generation.      ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/about/","tags":"","title":"About"},{"body":"This is the blog section. It has two categories: News and Releases.\nFiles in these directories will be listed in reverse chronological order.\n","categories":"","description":"","excerpt":"This is the blog section. It has two categories: News and Releases. …","ref":"/blog/","tags":"","title":"Docsy Blog"},{"body":"","categories":"","description":"","excerpt":"","ref":"/categories/","tags":"","title":"Categories"},{"body":"","categories":"","description":"","excerpt":"","ref":"/community/","tags":"","title":"Community"},{"body":"","categories":"","description":"","excerpt":"","ref":"/search/","tags":"","title":"Search Results"},{"body":"  #td-cover-block-0 { background-image: url(/featured-background_hu27771fe1cc206f06193f81fdee596912_385721_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/featured-background_hu27771fe1cc206f06193f81fdee596912_385721_1920x1080_fill_q75_catmullrom_top.jpg); } }  VULNMAN A Pentest Management and Collaboration Software  Learn More   Download            Vulnman is a free and open-source pentest management and collaboration software.\nManage your pentest projects and their related assets using the vulnman web interface. Vulnman comes with a simple to use report generator. This allows the pentesters to focus on finding vulnerabilities.\nIt is built using the powerful Django Framework.\n      Unlimited Projects! Despite other solutions, vulnman does not limit the amount of users or projects. Vulnman is free and open source software.\n    Report Generator! Vulnman contains a simple to use pentest report generator. Never waste your time struggling with Word documents.\n    Customizable Vulnman can be customized at multiple places. Some of them are: Report Templates, Vulnerability Templates, Checklists\n     ","categories":"","description":"","excerpt":"  #td-cover-block-0 { background-image: …","ref":"/","tags":"","title":"Vulnman Project"}]